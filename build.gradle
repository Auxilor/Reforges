buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.0"
    }
}

plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'maven-publish'
    id 'java'
}

dependencies {
    implementation project(":eco-core").getSubprojects()
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://jitpack.io' }
        maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url 'https://papermc.io/repo/repository/maven-public/' }
        maven { url 'https://repo.rosewooddev.io/repository/public/' }
    }

    jar {
        onlyIf { !sourceSets.main.allSource.files.isEmpty() }
    }

    shadowJar {
        relocate('com.willfp.libreforge', 'com.willfp.reforges.libreforge')
    }

    dependencies {
        compileOnly 'com.willfp:eco:6.17.1'
        implementation 'com.willfp:libreforge:2.2.1'

        compileOnly 'org.jetbrains:annotations:23.0.0'

        compileOnly 'org.projectlombok:lombok:1.18.20'
        annotationProcessor 'org.projectlombok:lombok:1.18.20'

        testCompileOnly 'org.projectlombok:lombok:1.18.20'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

        compileOnly 'org.jetbrains.kotlin:kotlin-stdlib:1.6.0'
    }

    tasks.withType(JavaCompile) {
        options.deprecation = true
        options.encoding = 'UTF-8'
    }

    processResources {
        filesNotMatching(["**/*.png", "**/models/**", "**/textures/**", "**reforges.yml"]) {
            expand projectVersion: project.version
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            jvmTarget = "17"
        }
    }

    java.sourceCompatibility = JavaVersion.VERSION_17
    java.targetCompatibility = JavaVersion.VERSION_17

    compileJava.options.encoding = 'UTF-8'
    compileJava.dependsOn clean

    build.dependsOn shadowJar
}

tasks.withType(Jar) {
    destinationDirectory = file("$rootDir/bin/")
}

clean.doLast {
    file("${rootDir}/bin").deleteDir()
}

shadowJar {
    archiveFileName = findProperty("plugin-name") + " v" + findProperty("version") + ".jar"
}

jar {
    archiveFileName = findProperty("plugin-name") + " v" + findProperty("version") + ".jar"
}

group = 'com.willfp'
archivesBaseName = project.name
version = findProperty("version")

build.dependsOn shadowJar
